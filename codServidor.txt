import es.upb.RMI.RMI;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

//La clase servidor hereda de UnicastRemoteObject e implementa el proyecto creado RMI
public class Servidor extends UnicastRemoteObject implements RMI { 
    public Servidor() throws RemoteException{
        super();
    }
    
    //Hacemos override de los métodos declarados en la interfaz RMI
    @Override
    public double suma(double a, double b) throws RemoteException {
        return a+b;
    }

    @Override
    public double resta(double a, double b) throws RemoteException {
        return a-b;
    }

    @Override
    public double multiplicacion(double a, double b) throws RemoteException {
        return a*b;
    }

    @Override
    public double division(double a, double b) throws RemoteException {
        return a/b;
    }
    
    public static void main(String[] args){
        try{
            //Creamos el registro, es importante especificar el puerto por el que el
            //server estará escuchando
            Registry registro = LocateRegistry.createRegistry(7777);
            //También es importante especificar el nombre, en este caso
            //Remoto RMI
            registro.rebind("RemotoRMI", new Servidor());
            System.out.println("Servidor activo");
        }catch(RemoteException ex){
            System.out.println(ex.getMessage());
        }
    }